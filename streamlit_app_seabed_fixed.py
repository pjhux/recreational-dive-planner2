
def plot_dive_profile_with_pg(dive1_time, dive1_depth, pg1, surface_interval, pg2, dive2_time, dive2_depth, pg_final):
    import matplotlib.pyplot as plt
    import streamlit as st

    # Time positions
    t1 = 1
    t2 = t1 + dive1_time
    t3 = t2 + 1
    t4 = t3 + surface_interval
    t5 = t4 + 1
    t6 = t5 + dive2_time
    t7 = t6 + 1

    x = [0, t1, t2, t3, t4, t5, t6, t7]
    y = [0, dive1_depth, dive1_depth, 0, 0, dive2_depth, dive2_depth, 0]

    # Create seabed polygon that connects the bottom of dive 1 to bottom of dive 2
    seabed_upper_x = [t1, t2, t4, t5, t6]
    seabed_upper_y = [dive1_depth, dive1_depth,
                      dive1_depth + (dive2_depth - dive1_depth) * (t4 - t2) / (t5 - t2),
                      dive2_depth, dive2_depth]
    seabed_lower_y = [max(dive1_depth, dive2_depth) + 20] * len(seabed_upper_x)

    # Combine upper and lower boundaries into one polygon
    seabed_poly_x = seabed_upper_x + seabed_upper_x[::-1]
    seabed_poly_y = seabed_upper_y + seabed_lower_y[::-1]

    fig, ax = plt.subplots(figsize=(10, 5))

    # Background layers
    ax.axhspan(0, -5, facecolor='skyblue', alpha=0.5, zorder=0)
    ax.axhspan(-5, max(dive1_depth, dive2_depth) + 25, facecolor='midnightblue', alpha=0.6, zorder=0)

    # Dive path
    ax.plot(x, y, marker='o', color='red', linewidth=2, label="Dive Path")

    # Seabed shading
    ax.fill(seabed_poly_x, seabed_poly_y, facecolor='wheat', alpha=0.6)

    # Pressure Group markers
    ax.annotate(f"PG: {pg1}", xy=(t2, 0), xytext=(t2, 2), ha='center',
                arrowprops=dict(arrowstyle="->", color='black'), fontsize=10, color='black', backgroundcolor='white')
    ax.annotate(f"PG: {pg2}", xy=(t4, 0), xytext=(t4, 2), ha='center',
                arrowprops=dict(arrowstyle="->", color='black'), fontsize=10, color='black', backgroundcolor='white')
    ax.annotate(f"PG: {pg_final}", xy=(t6, 0), xytext=(t6, 2), ha='center',
                arrowprops=dict(arrowstyle="->", color='black'), fontsize=10, color='black', backgroundcolor='white')

    ax.set_xlabel("Time (min)")
    ax.set_ylabel("Depth (m)")
    ax.set_title("Dive Profile with Seamless Seabed and PG Markers")
    ax.invert_yaxis()
    ax.grid(True)
    ax.legend()

    st.pyplot(fig)



import streamlit as st
import matplotlib.pyplot as plt



    # Time positions
    t3 = t2 + 1
    t4 = t3 + surface_interval
    t5 = t4 + 1
    t6 = t5 + dive2_time
    t7 = t6 + 1


    # Create seabed polygon that connects the bottom of dive 1 to bottom of dive 2
    seabed_upper_x = [t1, t2, t4, t5, t6]
    seabed_upper_y = [dive1_depth, dive1_depth,
                      dive1_depth + (dive2_depth - dive1_depth) * (t4 - t2) / (t5 - t2),
                      dive2_depth, dive2_depth]
    seabed_lower_y = [max(dive1_depth, dive2_depth) + 20] * len(seabed_upper_x)

    # Combine upper and lower boundaries into one polygon
    seabed_poly_x = seabed_upper_x + seabed_upper_x[::-1]
    seabed_poly_y = seabed_upper_y + seabed_lower_y[::-1]


    # Background
    ax.axhspan(0, -5, facecolor='skyblue', alpha=0.5, zorder=0)
    ax.axhspan(-5, max(dive1_depth, dive2_depth) + 25, facecolor='midnightblue', alpha=0.6, zorder=0)

    # Dive profile in red

    # Seabed filled polygon

    # Pressure group labels at surface
                arrowprops=dict(arrowstyle="->", color='black'), fontsize=10, color='black', backgroundcolor='white')
                arrowprops=dict(arrowstyle="->", color='black'), fontsize=10, color='black', backgroundcolor='white')
                arrowprops=dict(arrowstyle="->", color='black'), fontsize=10, color='black', backgroundcolor='white')

    ax.set_xlabel("Time (min)")
    ax.set_ylabel("Depth (m)")
    ax.set_title("Dive Profile with Connected Seabed and PG Markers at Surface")
    ax.invert_yaxis()
    ax.grid(True)
    ax.legend()

    st.pyplot(fig)



def plot_dive_profile_with_pg(dive1_time, dive1_depth, pg1, surface_interval, pg2, dive2_time, dive2_depth, pg_final):

    # Time positions
    t3 = t2 + 1
    t4 = t3 + surface_interval
    t5 = t4 + 1
    t6 = t5 + dive2_time
    t7 = t6 + 1


    # Create seabed polygon that connects the bottom of dive 1 to bottom of dive 2
    seabed_upper_x = [t1, t2, t4, t5, t6]
    seabed_upper_y = [dive1_depth, dive1_depth,
                      dive1_depth + (dive2_depth - dive1_depth) * (t4 - t2) / (t5 - t2),
                      dive2_depth, dive2_depth]
    seabed_lower_y = [max(dive1_depth, dive2_depth) + 20] * len(seabed_upper_x)

    # Combine upper and lower boundaries into one polygon
    seabed_poly_x = seabed_upper_x + seabed_upper_x[::-1]
    seabed_poly_y = seabed_upper_y + seabed_lower_y[::-1]


    # Background layers
    ax.axhspan(0, -5, facecolor='skyblue', alpha=0.5, zorder=0)
    ax.axhspan(-5, max(dive1_depth, dive2_depth) + 25, facecolor='midnightblue', alpha=0.6, zorder=0)

    # Dive path

    # Seabed shading

    # Pressure Group markers
                arrowprops=dict(arrowstyle="->", color='black'), fontsize=10, color='black', backgroundcolor='white')
                arrowprops=dict(arrowstyle="->", color='black'), fontsize=10, color='black', backgroundcolor='white')
                arrowprops=dict(arrowstyle="->", color='black'), fontsize=10, color='black', backgroundcolor='white')

    ax.set_xlabel("Time (min)")
    ax.set_ylabel("Depth (m)")
    ax.invert_yaxis()
    ax.grid(True)
    ax.legend()

    st.pyplot(fig)


# === Data Tables (Preloaded) ===
pressure_table = {10.0: {'A': 10,
        'B': 20,
        'C': 26,
        'D': 30,
        'E': 34,
        'F': 37,
        'G': 41,
        'H': 45,
        'I': 50,
        'J': 54,
        'K': 59,
        'L': 64,
        'M': 70,
        'N': 75,
        'O': 82,
        'P': 88,
        'Q': 95,
        'R': 104,
        'S': 112,
        'T': 122,
        'U': 133,
        'V': 145,
        'W': 160,
        'X': 178,
        'Y': 199,
        'Z': 219},
 12.0: {'A': 9,
        'B': 17,
        'C': 23,
        'D': 26,
        'E': 29,
        'F': 32,
        'G': 35,
        'H': 38,
        'I': 42,
        'J': 45,
        'K': 49,
        'L': 53,
        'M': 57,
        'N': 62,
        'O': 66,
        'P': 71,
        'Q': 76,
        'R': 82,
        'S': 88,
        'T': 94,
        'U': 101,
        'V': 108,
        'W': 116,
        'X': 125,
        'Y': 134,
        'Z': 147},
 14.0: {'A': 8.0,
        'B': 15.0,
        'C': 19.0,
        'D': 22.0,
        'E': 24.0,
        'F': 27.0,
        'G': 29.0,
        'H': 32.0,
        'I': 35.0,
        'J': 37.0,
        'K': 40.0,
        'L': 43.0,
        'M': 47.0,
        'N': 50.0,
        'O': 53.0,
        'P': 57.0,
        'Q': 61.0,
        'R': 64.0,
        'S': 68.0,
        'T': 73.0,
        'U': 77.0,
        'V': 82.0,
        'W': 87.0,
        'X': 92.0,
        'Y': 98.0,
        'Z': None},
 16.0: {'A': 7.0,
        'B': 13.0,
        'C': 17.0,
        'D': 19.0,
        'E': 21.0,
        'F': 23.0,
        'G': 25.0,
        'H': 27.0,
        'I': 29.0,
        'J': 32.0,
        'K': 34.0,
        'L': 37.0,
        'M': 39.0,
        'N': 42.0,
        'O': 45.0,
        'P': 48.0,
        'Q': 50.0,
        'R': 53.0,
        'S': 56.0,
        'T': 60.0,
        'U': 63.0,
        'V': 67.0,
        'W': 70.0,
        'X': 72.0,
        'Y': None,
        'Z': None},
 18.0: {'A': 6.0,
        'B': 11.0,
        'C': 15.0,
        'D': 16.0,
        'E': 18.0,
        'F': 20.0,
        'G': 22.0,
        'H': 24.0,
        'I': 26.0,
        'J': 28.0,
        'K': 30.0,
        'L': 32.0,
        'M': 34.0,
        'N': 36.0,
        'O': 39.0,
        'P': 41.0,
        'Q': 43.0,
        'R': 46.0,
        'S': 48.0,
        'T': 51.0,
        'U': 53.0,
        'V': 55.0,
        'W': 56.0,
        'X': None,
        'Y': None,
        'Z': None},
 20.0: {'A': 6.0,
        'B': 10.0,
        'C': 13.0,
        'D': 15.0,
        'E': 16.0,
        'F': 18.0,
        'G': 20.0,
        'H': 21.0,
        'I': 23.0,
        'J': 25.0,
        'K': 26.0,
        'L': 28.0,
        'M': 30.0,
        'N': 32.0,
        'O': 34.0,
        'P': 36.0,
        'Q': 38.0,
        'R': 40.0,
        'S': 42.0,
        'T': 44.0,
        'U': 45.0,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 22.0: {'A': 5.0,
        'B': 9.0,
        'C': 12.0,
        'D': 13.0,
        'E': 15.0,
        'F': 16.0,
        'G': 18.0,
        'H': 19.0,
        'I': 21.0,
        'J': 22.0,
        'K': 24.0,
        'L': 25.0,
        'M': 27.0,
        'N': 29.0,
        'O': 30.0,
        'P': 32.0,
        'Q': 34.0,
        'R': 36.0,
        'S': 37.0,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 25.0: {'A': 4.0,
        'B': 8.0,
        'C': 10.0,
        'D': 11.0,
        'E': 13.0,
        'F': 14.0,
        'G': 15.0,
        'H': 17.0,
        'I': 18.0,
        'J': 19.0,
        'K': 21.0,
        'L': 22.0,
        'M': 23.0,
        'N': 25.0,
        'O': 26.0,
        'P': 28.0,
        'Q': 29.0,
        'R': None,
        'S': None,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 30.0: {'A': 3.0,
        'B': 6.0,
        'C': 8.0,
        'D': 9.0,
        'E': 10.0,
        'F': 11.0,
        'G': 12.0,
        'H': 13.0,
        'I': 14.0,
        'J': 15.0,
        'K': 16.0,
        'L': 17.0,
        'M': 19.0,
        'N': 20.0,
        'O': None,
        'P': None,
        'Q': None,
        'R': None,
        'S': None,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 35.0: {'A': 3.0,
        'B': 5.0,
        'C': 7.0,
        'D': 8.0,
        'E': None,
        'F': 9.0,
        'G': 10.0,
        'H': 11.0,
        'I': 12.0,
        'J': 13.0,
        'K': 14.0,
        'L': None,
        'M': None,
        'N': None,
        'O': None,
        'P': None,
        'Q': None,
        'R': None,
        'S': None,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 40.0: {'A': None,
        'B': 5.0,
        'C': 6.0,
        'D': None,
        'E': 7.0,
        'F': 8.0,
        'G': 9.0,
        'H': None,
        'I': None,
        'J': None,
        'K': None,
        'L': None,
        'M': None,
        'N': None,
        'O': None,
        'P': None,
        'Q': None,
        'R': None,
        'S': None,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 42.0: {'A': None,
        'B': 4.0,
        'C': None,
        'D': 6.0,
        'E': 7.0,
        'F': 8.0,
        'G': None,
        'H': None,
        'I': None,
        'J': None,
        'K': None,
        'L': None,
        'M': None,
        'N': None,
        'O': None,
        'P': None,
        'Q': None,
        'R': None,
        'S': None,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None}}
surface_interval_table = {'A': {'A': 180,
       'B': None,
       'C': None,
       'D': None,
       'E': None,
       'F': None,
       'G': None,
       'H': None,
       'I': None,
       'J': None,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'B': {'A': 228,
       'B': 47,
       'C': None,
       'D': None,
       'E': None,
       'F': None,
       'G': None,
       'H': None,
       'I': None,
       'J': None,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'C': {'A': 250,
       'B': 69,
       'C': 21,
       'D': None,
       'E': None,
       'F': None,
       'G': None,
       'H': None,
       'I': None,
       'J': None,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'D': {'A': 259,
       'B': 78,
       'C': 30,
       'D': 8,
       'E': None,
       'F': None,
       'G': None,
       'H': None,
       'I': None,
       'J': None,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'E': {'A': 268,
       'B': 87,
       'C': 38,
       'D': 16,
       'E': 7,
       'F': None,
       'G': None,
       'H': None,
       'I': None,
       'J': None,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'F': {'A': 275,
       'B': 94,
       'C': 46,
       'D': 24,
       'E': 15,
       'F': 7,
       'G': None,
       'H': None,
       'I': None,
       'J': None,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'G': {'A': 282,
       'B': 101,
       'C': 53,
       'D': 31,
       'E': 22,
       'F': 13,
       'G': 6,
       'H': None,
       'I': None,
       'J': None,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'H': {'A': 288,
       'B': 107,
       'C': 59,
       'D': 37,
       'E': 28,
       'F': 20,
       'G': 12,
       'H': 5,
       'I': None,
       'J': None,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'I': {'A': 294,
       'B': 113,
       'C': 65,
       'D': 43,
       'E': 34,
       'F': 26,
       'G': 18,
       'H': 11,
       'I': 5,
       'J': None,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'J': {'A': 300,
       'B': 119,
       'C': 71,
       'D': 49,
       'E': 40,
       'F': 31,
       'G': 24,
       'H': 17,
       'I': 11,
       'J': 5,
       'K': None,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'K': {'A': 305,
       'B': 124,
       'C': 76,
       'D': 54,
       'E': 45,
       'F': 37,
       'G': 29,
       'H': 22,
       'I': 16,
       'J': 10,
       'K': 4,
       'L': None,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'L': {'A': 310,
       'B': 129,
       'C': 81,
       'D': 59,
       'E': 50,
       'F': 42,
       'G': 34,
       'H': 27,
       'I': 21,
       'J': 15,
       'K': 9,
       'L': 4,
       'M': None,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'M': {'A': 315,
       'B': 134,
       'C': 85,
       'D': 64,
       'E': 55,
       'F': 46,
       'G': 39,
       'H': 32,
       'I': 25,
       'J': 19,
       'K': 14,
       'L': 9,
       'M': 4,
       'N': None,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'N': {'A': 319,
       'B': 138,
       'C': 90,
       'D': 68,
       'E': 59,
       'F': 51,
       'G': 43,
       'H': 36,
       'I': 30,
       'J': 24,
       'K': 18,
       'L': 13,
       'M': 8,
       'N': 3,
       'O': None,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'O': {'A': 324,
       'B': 143,
       'C': 94,
       'D': 72,
       'E': 63,
       'F': 55,
       'G': 47,
       'H': 41,
       'I': 34,
       'J': 28,
       'K': 23,
       'L': 17,
       'M': 12,
       'N': 8,
       'O': 3,
       'P': None,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'P': {'A': 328,
       'B': 147,
       'C': 98,
       'D': 76,
       'E': 67,
       'F': 59,
       'G': 51,
       'H': 45,
       'I': 38,
       'J': 32,
       'K': 27,
       'L': 21,
       'M': 16,
       'N': 12,
       'O': 7,
       'P': 3,
       'Q': None,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'Q': {'A': 331,
       'B': 150,
       'C': 102,
       'D': 80,
       'E': 71,
       'F': 63,
       'G': 55,
       'H': 48,
       'I': 42,
       'J': 36,
       'K': 30,
       'L': 25,
       'M': 20,
       'N': 16,
       'O': 11,
       'P': 7,
       'Q': 3,
       'R': None,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'R': {'A': 335,
       'B': 154,
       'C': 106,
       'D': 84,
       'E': 75,
       'F': 67,
       'G': 59,
       'H': 52,
       'I': 46,
       'J': 40,
       'K': 34,
       'L': 29,
       'M': 24,
       'N': 19,
       'O': 15,
       'P': 11,
       'Q': 7,
       'R': 3,
       'S': None,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'S': {'A': 339,
       'B': 158,
       'C': 109,
       'D': 87,
       'E': 78,
       'F': 70,
       'G': 63,
       'H': 56,
       'I': 49,
       'J': 43,
       'K': 38,
       'L': 32,
       'M': 27,
       'N': 23,
       'O': 18,
       'P': 14,
       'Q': 10,
       'R': 6,
       'S': 3,
       'T': None,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'T': {'A': 342,
       'B': 161,
       'C': 113,
       'D': 91,
       'E': 82,
       'F': 73,
       'G': 66,
       'H': 59,
       'I': 53,
       'J': 47,
       'K': 41,
       'L': 36,
       'M': 31,
       'N': 26,
       'O': 22,
       'P': 17,
       'Q': 13,
       'R': 10,
       'S': 6,
       'T': 2,
       'U': None,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'U': {'A': 345,
       'B': 164,
       'C': 116,
       'D': 94,
       'E': 85,
       'F': 77,
       'G': 69,
       'H': 62,
       'I': 56,
       'J': 50,
       'K': 44,
       'L': 39,
       'M': 34,
       'N': 29,
       'O': 25,
       'P': 21,
       'Q': 17,
       'R': 13,
       'S': 9,
       'T': 6,
       'U': 2,
       'V': None,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'V': {'A': 348,
       'B': 167,
       'C': 119,
       'D': 97,
       'E': 88,
       'F': 80,
       'G': 72,
       'H': 65,
       'I': 59,
       'J': 53,
       'K': 47,
       'L': 42,
       'M': 37,
       'N': 33,
       'O': 28,
       'P': 24,
       'Q': 20,
       'R': 16,
       'S': 12,
       'T': 9,
       'U': 5,
       'V': 2,
       'W': None,
       'X': None,
       'Y': None,
       'Z': None},
 'W': {'A': 351,
       'B': 170,
       'C': 122,
       'D': 100,
       'E': 91,
       'F': 83,
       'G': 75,
       'H': 68,
       'I': 62,
       'J': 56,
       'K': 50,
       'L': 45,
       'M': 40,
       'N': 36,
       'O': 31,
       'P': 27,
       'Q': 23,
       'R': 19,
       'S': 15,
       'T': 12,
       'U': 8,
       'V': 5,
       'W': 2,
       'X': None,
       'Y': None,
       'Z': None},
 'X': {'A': 354,
       'B': 173,
       'C': 125,
       'D': 103,
       'E': 94,
       'F': 86,
       'G': 78,
       'H': 71,
       'I': 65,
       'J': 59,
       'K': 53,
       'L': 48,
       'M': 43,
       'N': 39,
       'O': 34,
       'P': 30,
       'Q': 26,
       'R': 22,
       'S': 18,
       'T': 15,
       'U': 11,
       'V': 8,
       'W': 5,
       'X': 2,
       'Y': None,
       'Z': None},
 'Y': {'A': 357,
       'B': 176,
       'C': 128,
       'D': 106,
       'E': 97,
       'F': 89,
       'G': 81,
       'H': 74,
       'I': 68,
       'J': 62,
       'K': 56,
       'L': 51,
       'M': 46,
       'N': 41,
       'O': 37,
       'P': 33,
       'Q': 29,
       'R': 25,
       'S': 21,
       'T': 18,
       'U': 14,
       'V': 11,
       'W': 8,
       'X': 5,
       'Y': 2,
       'Z': None},
 'Z': {'A': 360,
       'B': 179,
       'C': 131,
       'D': 109,
       'E': 100,
       'F': 91,
       'G': 84,
       'H': 77,
       'I': 71,
       'J': 65,
       'K': 59,
       'L': 54,
       'M': 49,
       'N': 44,
       'O': 40,
       'P': 35,
       'Q': 31,
       'R': 28,
       'S': 24,
       'T': 20,
       'U': 17,
       'V': 14,
       'W': 11,
       'X': 8,
       'Y': 5,
       'Z': 2}}
rnt_lookup = {10.0: {'A': 10.0,
        'B': 20.0,
        'C': 26.0,
        'D': 30.0,
        'E': 34.0,
        'F': 37.0,
        'G': 41.0,
        'H': 45.0,
        'I': 50.0,
        'J': 54.0,
        'K': 59.0,
        'L': 64.0,
        'M': 70.0,
        'N': 75.0,
        'O': 82.0,
        'P': 88.0,
        'Q': 95.0,
        'R': 104.0,
        'S': 112.0,
        'T': 122.0,
        'U': 133.0,
        'V': 145.0,
        'W': 160.0,
        'X': 178.0,
        'Y': 199.0,
        'Z': 219.0},
 12.0: {'A': 9.0,
        'B': 17.0,
        'C': 23.0,
        'D': 26.0,
        'E': 29.0,
        'F': 32.0,
        'G': 35.0,
        'H': 38.0,
        'I': 42.0,
        'J': 45.0,
        'K': 49.0,
        'L': 53.0,
        'M': 57.0,
        'N': 62.0,
        'O': 66.0,
        'P': 71.0,
        'Q': 76.0,
        'R': 82.0,
        'S': 88.0,
        'T': 94.0,
        'U': 101.0,
        'V': 108.0,
        'W': 116.0,
        'X': 125.0,
        'Y': 134.0,
        'Z': 147.0},
 14.0: {'A': 8.0,
        'B': 15.0,
        'C': 19.0,
        'D': 22.0,
        'E': 24.0,
        'F': 27.0,
        'G': 29.0,
        'H': 32.0,
        'I': 35.0,
        'J': 37.0,
        'K': 40.0,
        'L': 43.0,
        'M': 47.0,
        'N': 50.0,
        'O': 53.0,
        'P': 57.0,
        'Q': 61.0,
        'R': 64.0,
        'S': 68.0,
        'T': 73.0,
        'U': 77.0,
        'V': 72.0,
        'W': 87.0,
        'X': 92.0,
        'Y': 98.0,
        'Z': None},
 16.0: {'A': 7.0,
        'B': 13.0,
        'C': 17.0,
        'D': 19.0,
        'E': 21.0,
        'F': 23.0,
        'G': 25.0,
        'H': 27.0,
        'I': 29.0,
        'J': 32.0,
        'K': 34.0,
        'L': 37.0,
        'M': 39.0,
        'N': 42.0,
        'O': 45.0,
        'P': 48.0,
        'Q': 50.0,
        'R': 53.0,
        'S': 56.0,
        'T': 60.0,
        'U': 63.0,
        'V': 67.0,
        'W': 70.0,
        'X': 72.0,
        'Y': None,
        'Z': None},
 18.0: {'A': 6.0,
        'B': 11.0,
        'C': 15.0,
        'D': 16.0,
        'E': 18.0,
        'F': 20.0,
        'G': 22.0,
        'H': 24.0,
        'I': 26.0,
        'J': 28.0,
        'K': 30.0,
        'L': 32.0,
        'M': 34.0,
        'N': 36.0,
        'O': 39.0,
        'P': 41.0,
        'Q': 43.0,
        'R': 46.0,
        'S': 48.0,
        'T': 51.0,
        'U': 53.0,
        'V': 55.0,
        'W': 56.0,
        'X': None,
        'Y': None,
        'Z': None},
 20.0: {'A': 6.0,
        'B': 10.0,
        'C': 13.0,
        'D': 15.0,
        'E': 16.0,
        'F': 18.0,
        'G': 20.0,
        'H': 21.0,
        'I': 23.0,
        'J': 25.0,
        'K': 26.0,
        'L': 28.0,
        'M': 30.0,
        'N': 32.0,
        'O': 34.0,
        'P': 36.0,
        'Q': 38.0,
        'R': 40.0,
        'S': 42.0,
        'T': 44.0,
        'U': 45.0,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 22.0: {'A': 5.0,
        'B': 9.0,
        'C': 12.0,
        'D': 13.0,
        'E': 15.0,
        'F': 16.0,
        'G': 18.0,
        'H': 19.0,
        'I': 21.0,
        'J': 22.0,
        'K': 24.0,
        'L': 25.0,
        'M': 27.0,
        'N': 29.0,
        'O': 30.0,
        'P': 32.0,
        'Q': 34.0,
        'R': 36.0,
        'S': 37.0,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 25.0: {'A': 4.0,
        'B': 8.0,
        'C': 10.0,
        'D': 11.0,
        'E': 13.0,
        'F': 14.0,
        'G': 15.0,
        'H': 17.0,
        'I': 18.0,
        'J': 19.0,
        'K': 21.0,
        'L': 22.0,
        'M': 23.0,
        'N': 25.0,
        'O': 26.0,
        'P': 28.0,
        'Q': 29.0,
        'R': None,
        'S': None,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 30.0: {'A': 3.0,
        'B': 6.0,
        'C': 8.0,
        'D': 9.0,
        'E': 10.0,
        'F': 11.0,
        'G': 12.0,
        'H': 13.0,
        'I': 14.0,
        'J': 15.0,
        'K': 16.0,
        'L': 17.0,
        'M': 19.0,
        'N': 20.0,
        'O': None,
        'P': None,
        'Q': None,
        'R': None,
        'S': None,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 35.0: {'A': 3.0,
        'B': 5.0,
        'C': 7.0,
        'D': 8.0,
        'E': 9.0,
        'F': 9.0,
        'G': 10.0,
        'H': 11.0,
        'I': 12.0,
        'J': 13.0,
        'K': 14.0,
        'L': None,
        'M': None,
        'N': None,
        'O': None,
        'P': None,
        'Q': None,
        'R': None,
        'S': None,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None},
 40.0: {'A': 2.0,
        'B': 5.0,
        'C': 6.0,
        'D': 7.0,
        'E': 7.0,
        'F': 8.0,
        'G': 9.0,
        'H': None,
        'I': None,
        'J': None,
        'K': None,
        'L': None,
        'M': None,
        'N': None,
        'O': None,
        'P': None,
        'Q': None,
        'R': None,
        'S': None,
        'T': None,
        'U': None,
        'V': None,
        'W': None,
        'X': None,
        'Y': None,
        'Z': None}}
column_order = ['Z',
 'Y',
 'X',
 'W',
 'V',
 'U',
 'T',
 'S',
 'R',
 'Q',
 'P',
 'O',
 'N',
 'M',
 'L',
 'K',
 'J',
 'I',
 'H',
 'G',
 'F',
 'E',
 'D',
 'C',
 'B',
 'A']

# === Core Functions ===
def calculate_pressure_group(depth_input, time_input):
    available_depths = sorted(pressure_table.keys())
    valid_depths = [d for d in available_depths if d >= depth_input]
    if not valid_depths:
        return None, "Depth too deep for table limits."
    depth_to_use = min(valid_depths)
    time_dict = pressure_table[depth_to_use]
    for pg, bottom_time in time_dict.items():
        if bottom_time is not None and bottom_time >= time_input:
            return pg, f"Pressure Group after dive: {pg} (Depth: {depth_to_use}m, Time rounded to: {bottom_time} min)"
    return None, "Bottom time exceeds table limits for that depth."

def convert_surface_interval_to_minutes(hhmm):
    try:
        h, m = map(int, hhmm.strip().split(":"))
        return h * 60 + m
    except:
        return None

def adjust_pressure_group(original_pg, interval_minutes):
    if original_pg not in surface_interval_table:
        return None, "Unknown original pressure group."
    row = surface_interval_table[original_pg]
    for pg in column_order:
        threshold = row.get(pg)
        if threshold is not None and interval_minutes <= threshold:
            return pg, f"New Pressure Group after {interval_minutes} minutes at surface: {pg}"
    for pg in reversed(column_order):
        if row.get(pg) is not None:
            return pg, f"New Pressure Group after {interval_minutes} minutes at surface: {pg}"
    return original_pg, "No valid thresholds found for pressure group adjustment."

def get_residual_nitrogen_time(pressure_group, planned_depth):
    depths = sorted(rnt_lookup.keys())
    valid_depths = [d for d in depths if d >= planned_depth]
    if not valid_depths:
        return None, "Depth too deep for residual nitrogen table."
    depth_to_use = valid_depths[0]
    rnt = rnt_lookup[depth_to_use].get(pressure_group)
    if rnt is None:
        return None, "No RNT value found for given depth and pressure group."
    return rnt, f"Residual Nitrogen Time (RNT) for depth {depth_to_use}m and PG {pressure_group}: {rnt} min"

# === Streamlit UI ===
st.title("🌊 Recreational Dive Planner")
st.write("Plan two consecutive dives with automatic pressure group, surface interval, and residual nitrogen handling.")

# First Dive Inputs
st.header("Dive 1")
col1, col2 = st.columns(2)
with col1:
    depth1 = st.number_input("Dive 1 Depth (m)", min_value=5.0, max_value=40.0, step=0.5, value=18.0)
with col2:
    time1 = st.number_input("Dive 1 Bottom Time (min)", min_value=1.0, max_value=200.0, step=1.0, value=34.0)

pg1, result1 = calculate_pressure_group(depth1, time1)
if pg1:
    st.success(result1)
else:
    st.error(result1)

# Surface Interval Input
st.header("Surface Interval")
surface_interval = st.text_input("Surface Interval (HH:MM)", value="1:00")
interval_minutes = convert_surface_interval_to_minutes(surface_interval)

if interval_minutes is not None and pg1:
    pg2, result2 = adjust_pressure_group(pg1, interval_minutes)
    if pg2:
        st.success(result2)
    else:
        st.error(result2)
else:
    pg2 = None

# Second Dive Inputs
st.header("Dive 2")
col3, col4 = st.columns(2)
with col3:
    depth2 = st.number_input("Dive 2 Depth (m)", min_value=5.0, max_value=40.0, step=0.5, value=15.0)
with col4:
    time2 = st.number_input("Dive 2 Bottom Time (min)", min_value=1.0, max_value=200.0, step=1.0, value=35.0)

# RNT + Total Bottom Time + Final PG + Dive Chart
if pg2:
    rnt, rnt_msg = get_residual_nitrogen_time(pg2, depth2)
    st.info(rnt_msg)
    if rnt is not None:
        total_bt = rnt + time2
        st.write(f"**Total Bottom Time (including RNT):** {total_bt} minutes")
        pg_final, final_msg = calculate_pressure_group(depth2, total_bt)
        if pg_final:
            st.success(f"Final Pressure Group after Dive 2: {pg_final}")
        else:
            st.error(final_msg)

        # Create Dive Profile Chart
        st.subheader("📉 Dive Profile Chart")
             1 + time1 + 1 + interval_minutes + 1,
             1 + time1 + 1 + interval_minutes + 1 + time2,
             1 + time1 + 1 + interval_minutes + 1 + time2 + 1]

        ax.set_xlabel("Time (min)")
        ax.set_ylabel("Depth (m)")
        ax.set_title("Dive Profile")
        ax.invert_yaxis()
        ax.grid(True)
        st.pyplot(fig)

